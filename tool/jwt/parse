#!/usr/bin/env bash

jwt::parse::help() {
    cat << EOF
Command
    ${CLI_COMMAND[@]}

Summary
    Parse and print a JWT token read from stdin.
EOF
    cat << EOF
EOF
}

jwt::parse::main() {
    # https://gist.github.com/dlenski/63509482df8ec0090e1439fc70ae2c8e

    local TOKEN
    IFS=. read -r -a TOKEN

    # Convert from URL-safe b64 to "standard" b64, and fix padding
    for i in $(seq 0 2); do
        TOKEN[$i]=$(tr '_-' '/+' <<< "${TOKEN[$i]}")
        case $(( ${#TOKEN[$i]} % 4 )) in
            1) TOKEN[$i]+="===" ;;
            2) TOKEN[$i]+="==" ;;
            3) TOKEN[$i]+="=" ;;
        esac
    done

    echo "Header:"
    echo "${TOKEN[0]}" \
        | base64 -d \
        | jq

    echo "Claims:"
    echo "${TOKEN[1]}" \
        | base64 -d \
        | jq

    echo "Signature:"
    echo "${TOKEN[2]}" \
        | base64 -d \
        | hexdump -v -e '30/1 "%02X" 1/30 "\n"'
}

jwt::parse::self_test() {
    JWT="eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI3NjEzMjY3OTgwNjktcjVtbGpsbG4xcmQ0bHJiaGc3NWVmZ2lncDM2bTc4ajVAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvcHJlZGljdGlvbiIsImF1ZCI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92NC90b2tlbiIsImV4cCI6MTMyODU1NDM4NSwiaWF0IjoxMzI4NTUwNzg1fQ.UFUt59SUM2_AW4cRU8Y0BYVQsNTo4n7AFsNrqOpYiICDu37vVt-tw38UKzjmUKtcRsLLjrR3gFW3dNDMx_pL9DVjgVHDdYirtrCekUHOYoa1CMR66nxep5q5cBQ4y4u2kIgSvChCTc9pmLLNoIem-ruCecAJYgI9Ks7pTnW1gkOKs0x3YpiLpzplVHAkkHztaXiJdtpBcY1OXyo6jTQCa3Lk2Q3va1dPkh_d--GU2M5flgd8xNBPYw4vxyt0mP59XZlHMpztZt0soSgObf7G3GXArreF_6tpbFsS3z2t5zkEiHuWJXpzcYr5zWTRPDEHsejeBSG8EgpLDce2380ROQ"
    ${CLI_COMMAND[@]} <<< "${JWT}"
}