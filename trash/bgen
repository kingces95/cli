CLI_IMPORT=(
    "cli-emit"
)

cli::dsl::bgen::help() {
    cat << EOF
Command
    ${CLI_COMMAND[@]}

Description
    Like ngen, but for bash.
EOF
}

main() {
    emit "$@" 
    # \
    #     | sed 's/__CLI_/CLI_/g' \
    #     | sed 's/__cli::/cli::/' 

    # emit::map_set CLI_SCOPE 'CLI_META' 'cli_meta'
    # echo "CLI_SCOPE+=([CLI_META]=\"cli_meta\" )"
    # cli::print "${META_PREFIX}" 
}

emit() {
 
    # local CLI_PREFIX=__CLI
    local META_PREFIX=REFLECT_META
    local -n META_GROUP_REF=${META_PREFIX}_GROUP
    # local -n META_BASH_NAME_REF=${META_PREFIX}_BASH_NAME

    cli::declare cli_meta ${META_PREFIX}
    cli::read ${META_PREFIX}

    # cli::write ${META_PREFIX}_GROUP map \
    #     | cli::eval_many "cli::write ${META_PREFIX}_GROUP_\${2}_BASH_TYPE map \
    #         | cli core emit -- CLI_ARG cli::declare::type::cli_meta_group_\${2}" > /dev/stderr

    # declare declare function (e.g. cli::declare::type::group_0)
    for i in ${META_GROUP_REF[@]}; do
        cli::write ${META_PREFIX}_GROUP_${i}_BASH_TYPE map \
            | cli core emit -- 'CLI_ARG' "cli::declare::type::cli_meta_group_${i}"
    done

    cli::write ${META_PREFIX} \
        | cli core wire load -- CLI_META cli_meta | sort -u \
        | cli core wire read | sort -u \
        | cli bash wire emit

    # cli::write ${META_PREFIX}

        # local -n META_GROUP_N_BASH_TYPE_REF=${META_PREFIX}_GROUP_${i}_BASH_TYPE
        # declare -p META_GROUP_N_BASH_TYPE_REF REFLECT_META_GROUP_0_BASH_TYPE
        

        # cli::write META_GROUP_N_BASH_TYPE_REF
        # declare fields (e.g. self_test=boolean)
        # for name in "${!META_GROUP_N_BASH_TYPE_REF[@]}"; do
        #     # echo bash_name type
        #     echo "${META_BASH_NAME_REF[${name}]^^} ${META_GROUP_N_BASH_TYPE_REF[${name}]}"
        # done | cli core emit -- 'CLI_ARG' "__cli::declare::type::group_${i}"

        # declare type (e.g. map __CLI_TYPE_CLI_GROUP_N)
        # local TYPE=__CLI_TYPE_CLI_GROUP_${i}
        # declare -A ${TYPE}
        # local -n TYPE_REF=${TYPE}

        # emit::map_set \
        #     ${CLI_PREFIX}_BGEN_DECLARE \
        #     ${TYPE} \
        #     ${FUNCTION_NAME}
    # done

    # TODO: cli::delcare should encapsulate this behavior (with optional -r -g)
    # cli::export::variables "${CLI_PREFIX}"
}

self_test() {
    cli sample kitchen-sink -h \
        | cli dsl tokenize \
        | cli dsl parse \
        | cli dsl meta \
        | cli dsl load \
        | ${CLI_COMMAND[@]} > /dev/null
}
